---
title: "Trabalho final"

---

**Objetivo:** Você deverá criar um documento com RMarkdown, versionar no GitHub e disponibilizar na internet. Esse trabalho final oferece orientações para que você pratique o que foi apresentado no curso.

**RECOMENDAÇÃO**: Faça as etapas sugeridas após cada aula.

**ATENÇÃO**: O recebimento do certificado está vinculado à entrega e aprovação deste trabalho final, além de ter frequência mínima de 75%.

## Pessoas que entregaram os trabalhos finais

```{r}
#| message: FALSE
#| echo: FALSE
url <- "https://docs.google.com/spreadsheets/d/1nqrxNLDIGYzY1Ps6iRCA-HZiB5ZI7WUXKkBXPyJp1Kc/edit#gid=758033737"
googlesheets4::gs4_auth(email = "milz.bea@gmail.com")
sheet <- googlesheets4::read_sheet(url, "trabalho-divulgar")


sheet |>
  dplyr::mutate(icon_github = dplyr::case_when(
    !is.na(github) ~ glue::glue(
      '<center><a href="{github}" target="_blank"><i class="fab fa-github"></i></a></center>'
    ),
    TRUE ~ ""
  ),
  url = dplyr::case_when(
    !is.na(url) ~ glue::glue(
      '<center><a href="{url}" target="_blank"><i class="fa fa-book"></i></a></center>'
    ),
    TRUE ~ ""
  ),
  repo_spec = stringr::str_remove(repo, "https://github.com/"),
   repo = dplyr::case_when(
    !is.na(repo) ~ glue::glue(
      '<a href="{repo}" target="_blank">{repo_spec}</a>'
    ),
    TRUE ~ ""
  )
  
  ) |> 
  dplyr::select(nome, icon_github, repo, url) |> 
    reactable::reactable(searchable = TRUE, columns = list(
        icon_github = reactable::colDef(html = TRUE, name = "GitHub", maxWidth = 100),
        nome = reactable::colDef(html = TRUE, name = "Nome"),
        url = reactable::colDef(html = TRUE, name = "Trabalho", maxWidth = 150),
        repo = reactable::colDef(html = TRUE, name = "Repositório")),
        defaultPageSize = 20
    )
```



## Etapas pré-codigo

- Pense no tipo de relatório que quer criar, qual é o objetivo do mesmo e o público-alvo. Por exemplo:

  - Uma análise de dados da pesquisa, a ser apresentada para outras pessoas pesquisadoras.
  
  - Um tutorial com código em R.
  
  - Uma página pessoal de divulgação.

- Escolha uma base de dados para utilizar! Segue algumas ideias:

  - Pacote [dados](https://cienciadedatos.github.io/dados/)
  
  - Repositório [tidytuesday](https://github.com/rfordatascience/tidytuesday) (em inglês)
  
  - Mais pacotes da comunidade BR: [mananciais](https://beatrizmilz.github.io/mananciais/), [reservatoriosBR](https://brunomioto.github.io/reservatoriosBR/), [qualR](https://quishqa.github.io/qualR/), [Outros](https://materiais-estudo-r.netlify.app/portugues.html#pacotes-da-comunidade)
  
  - Alguma que você **tenha interesse**!


## Aula 1



1) Crie um Projeto do RStudio para realizar a tarefa. Lembre-se de boas práticas para nomear o projeto: não utilize espaços, caracteres especiais, acentuação. O seu projeto deverá chamar "trabalho_relatorios_nome_sobrenome" (tudo minúsculo, separado por `_`). Ex: `trabalho_relatorios_beatriz_milz` 

A função `usethis::create_project()` será útil neste passo:

```r
usethis::create_project("caminho/trabalho_relatorios_nome_sobrenome")
```


**Todos os passos seguintes serão realizados neste projeto criado.**



2) Crie a estrutura do seu projeto: uma pasta `dados`, onde adicionará bases de dados (se necessário), e uma pasta `img` para imagens (se necessário). Você pode criar manualmente, ou utilizando a função `fs::dir_create()`:

```r
fs::dir_create("dados")
fs::dir_create("img")
```


## Aulas 2
 

3) Crie o arquivo RMarkdown que será utilizado. 

> File -> New File -> R Markdown... -> From template.

Escolha um template que você tenha gostado, ou que possa ser útil no futuro.


Você deve salvar o arquivo com o nome `index.Rmd`. Clique em `Knit` assim que o arquivo for criado, e confira se o arquivo `index.html` foi gerado sem erros.

## Aula 3

4) Agora você pode usar sua criatividade e adicionar conteúdo no relatório. 

Isso depende do objetivo do relatório e o público-alvo. 

Pense em quais opções de chunk utilizar em cada caso: você pretende mostrar o código ou escondê-lo? Faz sentido apra o seu público alvo ler o seu código?

Adicione pelo menos:

  - Um parágrafo de texto, com marcações.

  - Um link para uma página da internet.
  
  - Uma imagem.
  
  - Uma tabela.
  
  - Caso saiba usar ggplot, tente adicionar um gráfico.
  
  - Caso seja uma análise de pesquisa, tente adicionar referências usando `.bib`.
  


## Aula 4

5) Inicie o versionamento com a seguinte função:

```r
usethis::use_git()
```

Siga os passos até que o RStudio reinicie.



6) Crie um repositório no GitHub que esteja vinculado à este projeto:

```r
usethis::use_github()
```

Siga os passos até que uma janela do GitHub seja aberta e você possa ver o repositório criado. Guarde o link deste repositório!



## Aula 5

7) No painel Git do RStudio, selecione os arquivos criados e faça um **Commit**. Clique no botão de **Push** (seta verde apontada para cima). Confira no repositório do GitHub se as suas mudanças aparecem por lá.



8) Ative o GitHub Pages para disponibilizar na internet. Isso deverá ser feito no GitHub, na aba Settings, e então na opção Pages. [Siga as instruções neste slide](https://beatrizmilz.github.io/2022-curso-de-verao-ime-usp-relatorios/slides/#githubpages), usando a opção `root/`. 

Anote o link que é fornecido pelo GitHub. Espere alguns minutos, e então veja se algum conteúdo aparece na página.



9) Quando estiver feliz com o resultado, lembre-se de fazer o **Commit** com as mudanças, e enviá-las para o GitHub clicando no botão de **Push** (seta verde apontada para cima).

Confira no repositório do GitHub se as suas mudanças aparecem por lá. Confira na página da internet se as mudanças estão lá.


## Pós curso

10) Envie o link do relatório online e também do repositório do GitHub no formulário.


 
<!-- inicio font awesome -->
<script src="https://kit.fontawesome.com/1f72d6921a.js" crossorigin="anonymous"></script>

<!-- final font awesome -->

